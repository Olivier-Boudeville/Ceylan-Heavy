# Bash configuration file.

# Created 2002, June 26.
# Author: Olivier Boudeville (olivier.boudeville@online.fr)

# This script triggers the UNIX-common part of bash configuration.



# Projects section.

export LOANI_VERSION=latest


# LOANI_BASE may have been set before by .bashrc.local:
if [ -z "${LOANI_BASE}" ] ; then
	# Defaults to:
	export LOANI_BASE=$HOME/Projects
fi

LOANI_VERSION_BASE=${LOANI_BASE}/LOANI-${LOANI_VERSION}

export LOANI_REPOSITORY=${LOANI_VERSION_BASE}/LOANI-repository
export LOANI_INSTALLATIONS=${LOANI_VERSION_BASE}/LOANI-installations

export DS_DEV=${LOANI_INSTALLATIONS}/Nintendo-DS-development

#export DS_TRANSFER=${DS_DEV}/ds-transfer-repository
export DS_TRANSFER=/media/DS-homebrew/NDS

export CEYLAN_VERSION=0.7
export CEYLAN_ROOT=${LOANI_REPOSITORY}/ceylan/Ceylan
export CEYLAN_SRC=${CEYLAN_ROOT}/src
export CEYLAN_DOC=${CEYLAN_SRC}/doc/web/main/documentation

export OSDL_VERSION=0.5
export OSDL_ROOT=${LOANI_REPOSITORY}/osdl/OSDL
# Do not interfere with LOANI: export OSDL=${OSDL_ROOT}/src
export OSDL_SRC=${OSDL_ROOT}/src
export OSDL_DOC=${OSDL_SRC}/doc/web/main/documentation

export OSDL_ENV_FILE="${LOANI_INSTALLATIONS}/OSDL-environment.sh"


#export ORGE_ROOT=${LOANI_REPOSITORY}/osdl/Orge
export ORGE_ROOT=${LOANI_REPOSITORY}/OSDL-Erlang/Orge

export ORGE_SRC=${ORGE_ROOT}/src/code


export PROJECTS_BASE=$HOME/Projects

export YAG_VERSION=0.5
export YAG_ROOT=$PROJECTS_BASE/Tools/yag/yag-osdl-${YAG_VERSION}

export PROJECTS_BASE=$HOME/Projects

export GAMES_BASE=${PROJECTS_BASE}/${LOCAL_PROJECT_OFFSET}/Games

export DARM=${GAMES_BASE}/DARM
export DARM_ENV_FILE="${LOANI_INSTALLATIONS}/DARM-environment.sh"

export GAMES_BASE=${PROJECTS_BASE}/OSDL-common/club/games

export SKEL_VERSION=0.1
export SKEL_ROOT=${GAMES_BASE}/Skelmiskapr-${SKEL_VERSION}
export SKEL_SRC=${SKEL_ROOT}/src
export SKEL_DOC=${SKEL_SRC}/doc

export MICRO_PROJECTS=$PROJECTS_BASE/MicroProjects

export AGAR_CURRENT=${LOANI_REPOSITORY}/agar-1.4-from-svn
export AGAR_TESTING=${MICRO_PROJECTS}/Agar-testing


# For shell scripts:
export PATH=${CEYLAN_SRC}/code/scripts/shell:${OSDL_SRC}/code/scripts/shell:${PATH}

# For python scripts:
export PATH=${CEYLAN_SRC}/code/scripts/python:${PATH}

VERSION_FILE="${OSDL_ROOT}/conf/loani-versions.sh"
if [ -f ${VERSION_FILE} ] ; then
	source ${VERSION_FILE}
fi


# Sourceforge's section:

export SF_USER=wondersye
export SF=${SF_USER}@shell.sourceforge.net
export SF_SHELL="${SF}:/home/users/"`echo "${SF_USER}" | head -c 1`"/"`echo "${SF_USER}" | head -c 2`"/${SF_USER}"



# Compile farm:

#alias sfcf='ssh ${SF_USER}@cf-shell.sourceforge.net'
#alias sfshell='ssh ${SF_USER}@shell.sourceforge.net'


# Correct that with your user:
export TOSFCF=${SF_USER}@cf-shell.sourceforge.net:/home/users/w/wo/${SF_USER}


export CVS_RSH=ssh

# CVS not used anymore:
#CVS_CO_CEYLAN='cvs -z3 -d:ext:${SF_USER}@cvs.sourceforge.net:/cvsroot/ceylan co'
#SVN_CO_CEYLAN='svn co https://svn.sourceforge.net/svnroot/ceylan ceylan'

#CVS_CO_OSDL='cvs -z3 -d:ext:${SF_USER}@cvs.sourceforge.net:/cvsroot/osdl co'
#SVN_CO_OSDL='svn co https://svn.sourceforge.net/svnroot/osdl osdl'

# Needed to override RCS's /usr/bin/ci:
alias ci="${CEYLAN_SRC}/code/scripts/shell/ci"

alias mn='make -f Makefile.cross CROSS_TARGET=nintendo-ds'


# Internal CVS servers:

#INTERNAL_USER="${USER}"
#INTERNAL_SERVER=sonata
#CVS_BASE="/var/cvs/"

#alias cvsespe='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/Esperide'
#alias cvsonce='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/OnceSol'
#alias cvsclon='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/ClonicTree'
#alias cvsosdlint='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/OSDL'
#alias cvsceylint='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/Ceylan'
#alias cvsosdlcom='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/OSDL-common'
#alias cvsconfig='cvs -z3 -d:ext:${INTERNAL_USER}@${INTERNAL_SERVER}:${CVS_BASE}/Configurations'



# Aliases section:

alias l='ls -aF --color=auto'
alias ll='ls -l'
alias la='ls -alg $*|more'
alias lc='ls -clt'
alias sl='ls'

alias lr='ls -Rx $*|more'
alias dir='ls -l $*|more'

alias dc='cd'
alias s='cd ..'

alias cp='cp -i'
alias rm='rm -i'
alias mv='mv -i'

alias h='history'
alias print='lpr -p'
alias printText='a2ps'
alias mo='more'
alias r='fc -e -'
alias lock='xlock -mode blank'
alias m='make 2>&1'
alias ma='make 2>&1 | more'
alias sonata='ssh wondersye@sonata'
alias aranor='ssh wondersye@aranor'
alias rainbow='ssh wondersye@rainbow'
alias watt='ssh boudevil@watt'
alias tesla='ssh boudevil@tesla'
alias red='ssh wondersye@red'
alias orge='ssh orge@orge-testing.esperide.com'
alias pastek='ssh wondersye@pastek.nainwak.org'
alias wanderlust='ssh wondersye@wanderlust'

alias g='git'

# Shell section:

HISTSIZE=1000
IGNOREOF=1
set -o emacs
umask 002

export PATH=/bin:/usr/bin:/usr/local/bin:/usr/local:/usr/bin/X11:/sbin:/usr/sbin:$PATH:.

export LD_LIBRARY_PATH=/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH


export LS_COLORS='no=00:fi=00:di=01;35:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jpg=01;35:*.png=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.png=01;35:*.mpg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:'


# Inspired from http://www.micahcarrick.com/show-git-branch-in-shell-prompt.html:
#
parse_git_branch() {
 # git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
 res=`git branch 2>/dev/null`
 if [ -n "$res" ] ; then

 	branch=`echo "$res" | sed -e '/^[^*]/d' -e 's|* ||'`
	echo " [$branch]"

 fi	  
}


# With user:
export PS1="\n\e[95m\h \e[92m\u\e[95m \e[96m\t \e[93m"'$PWD'"\e[96m\$(parse_git_branch)\[\033[31m\]\e[95m\e[97m\n>"

# Without user:
#export PS1="\n\e[95m\h\e[95m \e[96m\t \e[93m"'$PWD'"\e[92m\$(parse_git_branch)\[\033[31m\]\e[95m\e[97m\n>"

export MANPATH=/usr/share/man:$MANPATH
export EDITOR=emacs

# Not to be merged with other windows, nor to be launched in the background:
export SVN_EDITOR="emacs"
export SHELL=bash
export PAGER=/usr/bin/less


# Host section:

export TOARANOR="wondersye@aranor:/home/wondersye"
#export TOETURANIS="sye@eturanis:/home/sye"
export TOSONATA="wondersye@sonata:/home/wondersye"
export TORAINBOW="wondersye@rainbow:/home/wondersye"
export TOWATT="boudevil@watt:/home/boudevil"
export TOTESLA="boudevil@tesla:/home/boudevil"
export TORED="wondersye@red:/home/wondersye"
export TOORGE="orge@orge-testing.esperide.com:/home/orge"
export TOPASTEK="wondersye@pastek.nainwak.org:/home/darm/wondersye"
export TOARANOR_FTP="www-data@aranor:/home/ftp/LOANI-archive-repository"
export TOWANDERLUST="wondersye@wanderlust:/home/wondersye"


# Cubbyhole section:

export PYTHONSTARTUP=${CEYLAN_SRC}/code/scripts/python/startup.py
export TRASH=$HOME/tmp/Trash
export DATA_VAULT=$HOME/Vault
export PLUG="--HTMLPlug"


# xterm section:

alias xt='/usr/bin/X11/xterm -bg black -fg white -name `basename $PWD`&'
alias xterm='xterm -fg black'
case $TERM in
	xterm*)
 		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
		;;
esac


# LogMX section:
export LOGMX_ROOT="$HOME/Software/LogMX/LogMX-current-install"
export PATH="${LOGMX_ROOT}:${PATH}"
alias logmx="${LOGMX_ROOT}/logmx.sh"


# Erlang section:
export ERLANG_ROOT="$HOME/Software/Erlang/Erlang-current-install"
export PATH="${ERLANG_ROOT}/bin:${PATH}"

export BATCH='CMD_LINE_OPT="--batch"'

#echo "-- Bash basically initialized according to Boudeville Standards --"
